services:
  mysql-db:
    image: mysql:5.7
    restart: always
    platform: linux/amd64
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DB_NAME}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "${MYSQL_PORT}:${MYSQL_PORT}"
    volumes:
      - ./my.cnf:/etc/mysql/conf.d/my.cnf
      - db_data:/var/lib/mysql
    networks:
      - app-network
#
#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
#    container_name: elasticsearch
#    ports:
#      - "${ES_PORT}:${ES_PORT}"
#      - "${CLUSTER_ES_PORT}:${CLUSTER_ES_PORT}"
#    volumes:
#      - ./data/elasticsearch:/usr/share/elasticsearch/data
#    environment:
#      discovery.type: single-node
#      ELASTIC_USERNAME: ${ELASTIC_USERNAME}  # 환경 변수 설정 필요
#      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
#      xpack.security.enabled: false
#      xpack.security.enrollment.enabled: false
#    networks:
#      - app-network
#
#  kibana:
#    image: docker.elastic.co/kibana/kibana:8.5.0
#    container_name: kibana
#    environment:
#      ELASTICSEARCH_HOSTS: "http://elasticsearch:${ES_PORT}"
#    ports:
#      - "${KIBANA_PORT}:${KIBANA_PORT}"
#    volumes:
#      - ./config/kibana.yml:/usr/share/kibana/config/kibana.yml
#    networks:
#      - app-network
#
#  logstash:
#    image: docker.elastic.co/logstash/logstash:8.13.4
#    container_name: logstash
#    ports:
#      - "${LOGSTASH_PORT}:${LOGSTASH_PORT}"
#      - "${LOGSTASH_PORT_MAPPING}:${LOGSTASH_PORT_MAPPING}"
#    depends_on:
#      - elasticsearch
#    environment:
#      xpack.monitoring.enabled: false
#      LOGSTASH_JAVA_OPTS: "-Xms512m -Xmx512m"
#    volumes:
#      - ./logstash/pipeline:/usr/share/logstash/pipeline
#      - ./logstash/mysql-connector-j-9.0.0.jar:/usr/share/logstash/mysql-connector-j-9.0.0.jar
#    networks:
#      - app-network

  mongodb:
    image: mongo:7
    container_name: mongodb-server
    ports:
      - "${MONGODB_PORT}:${MONGODB_PORT}"
    volumes:
      - mongo_data:/data/db
    networks:
      - app-network

volumes:
  db_data:  # MySQL 데이터
  es-data:  # Elasticsearch 데이터
  mongo_data:  # MongoDB 데이터
  redis-data:  # Redis 데이터
  rabbitmq_data:  # RabbitMQ 데이터

networks:
  app-network:
    driver: bridge