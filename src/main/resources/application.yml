
# 서버 설정
server:
  port: 8070  # 애플리케이션이 실행될 포트 번호 설정
  error:
    whitelabel:
      enabled: false  # Spring Boot 기본 에러 페이지(whitelabel error page) 비활성화

# 스프링 애플리케이션 설정
spring:
  profiles:
    active: default
  batch:
    job:
      enabled: false

#  # RabbitMQ 설정
#  rabbitmq:
#    host: localhost  # RabbitMQ 호스트
#    port: 5672  # RabbitMQ 포트
#    username: jinhan  # RabbitMQ 사용자 이름
#    password: 57575han  # RabbitMQ 비밀번호

  application:
    name: TrafficBlog  # 애플리케이션 이름 설정

  # 데이터베이스 설정
  datasource:
    url: jdbc:mysql://localhost:3306/adarticle-db  # MySQL 데이터베이스 연결 URL
    username: jinhan  # 데이터베이스 사용자 이름
    password: 57575han  # 데이터베이스 비밀번호
    driver-class-name: com.mysql.cj.jdbc.Driver  # JDBC 드라이버 클래스
    hikari:  # HikariCP(커넥션 풀) 설정
      pool-name: HikariCP  # 커넥션 풀 이름
      maximum-pool-size: 10  # 최대 커넥션 풀 크기
      minimum-idle: 5  # 최소 유지 커넥션 개수
      idle-timeout: 30000  # 커넥션 유휴 상태 유지 시간(ms)
      connection-timeout: 20000  # 커넥션 획득 대기 시간(ms)
      max-lifetime: 1800000  # 커넥션 최대 수명(ms)
      connection-test-query: SELECT 1  # 커넥션 유효성 검사 쿼리

  # JPA 설정
  jpa:
    hibernate:
      ddl-auto: create  # 데이터베이스 스키마를 업데이트로 설정
    database-platform: org.hibernate.dialect.MySQLDialect  # MySQL에 맞는 Hibernate 방언 설정
    show-sql: true  # SQL 쿼리 로깅 활성화
    properties:
      hibernate:
        format_sql: true  # SQL 출력 포맷 설정(가독성을 위해)

  # MongoDB 설정
  data:
    mongodb:
      uri: mongodb://localhost:27017/advertise-db  # MongoDB 연결 URI

    # Redis 설정
    redis:
      host: localhost  # Redis 호스트
      port: 6379  # Redis 포트 번호

# 로깅 설정
logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"  # 로그 레벨 형식 설정
    console: "%d{yyyy-MM-dd HH:mm:ss} - %level [%thread] %logger{36} - %msg%n"  # 콘솔 로그 출력 형식
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"  # 파일 로그 출력 형식

